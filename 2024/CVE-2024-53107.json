{
    "cve": {
        "id": "CVE-2024-53107",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2024-12-02T14:15:11.523",
        "lastModified": "2024-12-02T14:15:11.523",
        "vulnStatus": "Awaiting Analysis",
        "cveTags": [],
        "descriptions": [
            {
                "lang": "en",
                "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs/proc/task_mmu: prevent integer overflow in pagemap_scan_get_args()\n\nThe \"arg->vec_len\" variable is a u64 that comes from the user at the start\nof the function.  The \"arg->vec_len * sizeof(struct page_region))\"\nmultiplication can lead to integer wrapping.  Use size_mul() to avoid\nthat.\n\nAlso the size_add/mul() functions work on unsigned long so for 32bit\nsystems we need to ensure that \"arg->vec_len\" fits in an unsigned long."
            },
            {
                "lang": "es",
                "value": " En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: fs/proc/task_mmu: evitar el desbordamiento de enteros en pagemap_scan_get_args() La variable \"arg-&gt;vec_len\" es una u64 que proviene del usuario al inicio de la funci\u00f3n. La multiplicaci\u00f3n \"arg-&gt;vec_len * sizeof(struct page_region))\" puede provocar un ajuste de enteros. Utilice size_mul() para evitarlo. Adem\u00e1s, las funciones size_add/mul() funcionan en unsigned long, por lo que para los sistemas de 32 bits debemos asegurarnos de que \"arg-&gt;vec_len\" quepa en un unsigned long."
            }
        ],
        "metrics": {},
        "references": [
            {
                "url": "https://git.kernel.org/stable/c/669b0cb81e4e4e78cff77a5b367c7f70c0c6c05e",
                "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
            },
            {
                "url": "https://git.kernel.org/stable/c/adee03f8903c58a6a559f21388a430211fac8ce9",
                "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
            }
        ]
    }
}