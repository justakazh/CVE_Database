{
    "cve": {
        "id": "CVE-2024-10976",
        "sourceIdentifier": "f86ef6dc-4d3a-42ad-8f28-e6d5547a5007",
        "published": "2024-11-14T13:15:03.793",
        "lastModified": "2024-11-15T13:58:08.913",
        "vulnStatus": "Awaiting Analysis",
        "cveTags": [],
        "descriptions": [
            {
                "lang": "en",
                "value": "Incomplete tracking in PostgreSQL of tables with row security allows a reused query to view or change different rows from those intended.  CVE-2023-2455 and CVE-2016-2193 fixed most interaction between row security and user ID changes.  They missed cases where a subquery, WITH query, security invoker view, or SQL-language function references a table with a row-level security policy.  This has the same consequences as the two earlier CVEs.  That is to say, it leads to potentially incorrect policies being applied in cases where role-specific policies are used and a given query is planned under one role and then executed under other roles.  This scenario can happen under security definer functions or when a common user and query is planned initially and then re-used across multiple SET ROLEs.  Applying an incorrect policy may permit a user to complete otherwise-forbidden reads and modifications.  This affects only databases that have used CREATE POLICY to define a row security policy.  An attacker must tailor an attack to a particular application's pattern of query plan reuse, user ID changes, and role-specific row security policies.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected."
            },
            {
                "lang": "es",
                "value": "El seguimiento incompleto en PostgreSQL de tablas con seguridad de filas permite que una consulta reutilizada vea o cambie filas diferentes a las previstas. CVE-2023-2455 y CVE-2016-2193 solucionaron la mayor\u00eda de las interacciones entre la seguridad de filas y los cambios de ID de usuario. Pasaron por alto los casos en los que una subconsulta, una consulta WITH, una vista de invocador de seguridad o una funci\u00f3n de lenguaje SQL hace referencia a una tabla con una pol\u00edtica de seguridad a nivel de fila. Esto tiene las mismas consecuencias que las dos CVE anteriores. Es decir, conduce a la aplicaci\u00f3n de pol\u00edticas potencialmente incorrectas en los casos en los que se utilizan pol\u00edticas espec\u00edficas de roles y se planifica una consulta determinada bajo un rol y luego se ejecuta bajo otros roles. Este escenario puede ocurrir bajo funciones de definidor de seguridad o cuando se planifica inicialmente un usuario y una consulta comunes y luego se reutilizan en varios SET ROLE. La aplicaci\u00f3n de una pol\u00edtica incorrecta puede permitir que un usuario complete lecturas y modificaciones que de otro modo estar\u00edan prohibidas. Esto afecta solo a las bases de datos que han utilizado CREATE POLICY para definir una pol\u00edtica de seguridad de filas. Un atacante debe adaptar un ataque al patr\u00f3n de reutilizaci\u00f3n de planes de consulta, cambios de ID de usuario y pol\u00edticas de seguridad de filas espec\u00edficas de roles de una aplicaci\u00f3n en particular. Las versiones anteriores a PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17 y 12.21 se ven afectadas."
            }
        ],
        "metrics": {
            "cvssMetricV31": [
                {
                    "source": "f86ef6dc-4d3a-42ad-8f28-e6d5547a5007",
                    "type": "Secondary",
                    "cvssData": {
                        "version": "3.1",
                        "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:N",
                        "baseScore": 4.2,
                        "baseSeverity": "MEDIUM",
                        "attackVector": "NETWORK",
                        "attackComplexity": "HIGH",
                        "privilegesRequired": "LOW",
                        "userInteraction": "NONE",
                        "scope": "UNCHANGED",
                        "confidentialityImpact": "LOW",
                        "integrityImpact": "LOW",
                        "availabilityImpact": "NONE"
                    },
                    "exploitabilityScore": 1.6,
                    "impactScore": 2.5
                }
            ]
        },
        "weaknesses": [
            {
                "source": "f86ef6dc-4d3a-42ad-8f28-e6d5547a5007",
                "type": "Secondary",
                "description": [
                    {
                        "lang": "en",
                        "value": "CWE-1250"
                    }
                ]
            }
        ],
        "references": [
            {
                "url": "https://www.postgresql.org/support/security/CVE-2024-10976/",
                "source": "f86ef6dc-4d3a-42ad-8f28-e6d5547a5007"
            }
        ]
    }
}